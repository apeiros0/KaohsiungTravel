{"version":3,"sources":["all.js"],"names":["data","displayData","document","querySelector","kDistrictSelect","districtName","districtContent","hotDistrictListLink","pagination","contentNum","pageLeng","send","xhr","XMLHttpRequest","changeDistrict","e","pageNum","textContent","target","value","distData","displayDistrict","length","i","Zone","push","dataLen","start","str","counter","Math","ceil","limitPage","scrollFunction","display","innerHTML","preventDefault","documentElement","scrollTop","calPagesNum","concat","Picture1","Name","Opentime","Add","Tel","Ticketinfo","open","onload","array","JSON","parse","responseText","result","records","district","filter","element","index","indexOf","hotDistrict","addEventListener","copyArr","randomArr","max","randomNum","min","floor","random","splice","color","hotDistrictList","btnGoTop","nodeName","window","onscroll","style"],"mappings":"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","file":"all.js","sourcesContent":["// 避免汙染 global object\r\n(() => {\r\n    // 撈回來的資料\r\n    let data = [];\r\n    let displayData = [];\r\n\r\n    const kDistrictSelect = document.querySelector('#kDistrict-select');\r\n    const districtName = document.querySelector('.districtName');\r\n    const districtContent = document.querySelector('.districtContent');\r\n    const hotDistrictList = document.querySelector('.hotDistrict-list');\r\n    const hotDistrictListLink = document.querySelector('.hotDistrict-list-link');\r\n    const pagination = document.querySelector('.page');\r\n    const btnGoTop = document.querySelector('.goTop');\r\n\r\n\r\n\r\n    // 當前頁\r\n    let pageNum = 1;\r\n\r\n    // 每一個分頁顯示的數量 -> 4 筆\r\n    let contentNum = 4;\r\n\r\n    // 頁碼數量\r\n    let pageLeng = 0;\r\n\r\n    // 限制頁數\r\n    let limitPage = 10;\r\n\r\n    // -------------------------------------------------------------\r\n    // ajax 載入資料\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', 'https://data.kcg.gov.tw/api/action/datastore_search?resource_id=92290ee5-6e61-456f-80c0-249eae2fcc97', true);\r\n    xhr.send(null);\r\n\r\n    xhr.onload = function () {\r\n        let array = JSON.parse(xhr.responseText);\r\n\r\n        for (let i = 0; i < array.result.records.length; i++) {\r\n            // push 每筆 records 到 data\r\n            data.push(array.result.records[i])\r\n        }\r\n\r\n        let district = [];\r\n\r\n        // 把 data 裡的地區塞到 district 裡\r\n        for (let i = 0; i < data.length; i++) {\r\n            district.push(data[i].Zone);\r\n        }\r\n\r\n        // 排除陣列的重複元素\r\n        // filter (陣列的 prototype method) 過濾符合條件的元素，若不符合則刪除 (不更改原陣列，而回傳新陣列)\r\n        let result = district.filter(function (element, index, array) {\r\n            // arr.indexOf(element) 找出陣列的位置 (重複的以同樣的 index 取代)\r\n            // 陣列的 index (0....arr.length)\r\n            // 找出與 index 相同的目錄，不同的則排除\r\n            return array.indexOf(element) === index;\r\n        });\r\n\r\n\r\n        // 載入行政區資料到 <select> 裡\r\n        let str = ``;\r\n        const firstSelected = `<option disabled selected>- - 請選擇行政區- -</option>`;\r\n        for (let i = 0; i < result.length; i++) {\r\n            str += `<option value=\"${result[i]}\">${result[i]}</option>`;\r\n            // createElement\r\n            // var option = document.createElement('option');\r\n            // option.textContent = result[i];\r\n            // kDistrictSelect.appendChild(option);\r\n        }\r\n        kDistrictSelect.innerHTML = firstSelected + str;\r\n\r\n        // 顯示熱門行政區\r\n        hotDistrict(result);\r\n\r\n        // 載入預設的行政區內容\r\n        getAllDistrict();\r\n    }\r\n\r\n    // 監聽\r\n    kDistrictSelect.addEventListener('change', changeDistrict, false);\r\n    hotDistrictList.addEventListener('click', changeLink, false);\r\n    pagination.addEventListener('click', switchPages, false);\r\n    btnGoTop.addEventListener('click', goTop, false);\r\n\r\n\r\n    // -------------------------------------------------------------\r\n    // 顯示全部行政區\r\n    function getAllDistrict() {\r\n        districtName.textContent = 'Experiencing Kaohsiung';\r\n        displayData = data;\r\n        displayDistrict();\r\n    }\r\n\r\n    // 切換行政區改變當前標題、顯示頁數\r\n    function changeDistrict(e) {\r\n        e.preventDefault();\r\n        districtName.textContent = e.target.value;\r\n\r\n        let distData = [];\r\n\r\n        // 從 data 取相同地區的值，存到 distData 裡\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (e.target.value == data[i].Zone || e.target.textContent == data[i].Zone) {\r\n                distData.push(data[i]);\r\n            }\r\n        }\r\n\r\n        displayData = distData;\r\n\r\n        // 回到第一頁\r\n        pageNum = 1;\r\n\r\n        // 取出值後，呼叫 displayDistrict 顯示\r\n        displayDistrict();\r\n    }\r\n\r\n    // 換頁更新各區景點\r\n    function displayDistrict() {\r\n        let str = ``;\r\n\r\n        // 選取開始的陣列位置 -> 頁碼 乘以 每頁顯示數量\r\n        let start = pageNum * contentNum;\r\n        // 資料總長度\r\n        let dataLen = displayData.length;\r\n\r\n        // 計算、顯示有多少頁碼\r\n        calPagesNum(dataLen);\r\n\r\n\r\n        // 如果 資料長度大於 start，以 start 作為 for 的停止條件\r\n        if (dataLen > start) {\r\n            dataLen = start;\r\n        } else {\r\n            dataLen = displayData.length;\r\n        }\r\n\r\n        // 以 start - 每頁顯示數量 作為起始值，再依據條件顯示相應的資料 (0-4、4-8、8-12 ... 筆資料)\r\n        for (let i = start - contentNum; i < dataLen; i++) {\r\n            // 顯示筆數\r\n            str +=\r\n                `<div class=\"card\">\r\n                <div class=\"card-header\" style=\"background-image: url('${ displayData[i].Picture1}');\">\r\n                    <h2 class=\"card-header-title\">${ displayData[i].Name}</h2>\r\n                    <p class=\"card-header-content\">${ displayData[i].Zone}</p>                     \r\n                </div>\r\n\r\n                <div class=\"card-body\">\r\n                    <div class=\"districtInfo\">\r\n                        <div class=\"districtInfo-img\"><img src=\"images/icons_time.png\" alt=\"icons_time\"></div>\r\n                        <p class=\"districtInfo-content\">${ displayData[i].Opentime}</p>\r\n                    </div>\r\n\r\n                    <div class=\"districtInfo\">\r\n                    <div class=\"districtInfo-img\"><img src=\"images/icons_placeholder.png\" alt=\"icons_placeholder\"></div>\r\n                    <p class=\"districtInfo-content\">${ displayData[i].Add}</p>\r\n                    </div>\r\n                \r\n                    <div class=\"positionSet\">\r\n                        <div class=\"districtInfo\">\r\n                            <div class=\"districtInfo-img\"><img src=\"images/icons_telephone.png\" alt=\"icons_telephone\"></div>\r\n                            <p class=\"districtInfo-content\">${ displayData[i].Tel}</p>  \r\n                        </div>\r\n                        <div class=\"districtInfo\">\r\n                            <div class=\"districtInfo-img\"><img src=\"images/icons_pricetag.png\" alt=\"icons_pricetag\"></div>\r\n                            <p class=\"districtInfo-content\">${ displayData[i].Ticketinfo}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>`;\r\n        }\r\n\r\n        districtContent.innerHTML = str;\r\n    }\r\n\r\n    // -------------------------------------------------------------\r\n    // 計算、顯示頁碼\r\n    function calPagesNum(counter) {\r\n        let str = ``;\r\n        if (counter > contentNum) {\r\n            // Math.ceil() 最小整數：取大於這個數的最小整數\r\n            pageLeng = Math.ceil(counter / contentNum);\r\n\r\n            const prev = `<li class=\"page-direction\"><a class=\"page-direction-link\" href=\"#\">Prev</a></li>`;\r\n            const next = `<li class=\"page-direction\"><a class=\"page-direction-link\" href=\"#\">Next</a></li>`;\r\n\r\n            // 限制首頁頁數為 10 頁\r\n            if (pageLeng > limitPage) {\r\n                pageLeng = limitPage;\r\n            }\r\n\r\n            // 加進頁碼\r\n            for (let i = 1; i <= pageLeng; i++) {\r\n                // 顯示當下的頁碼\r\n                if (i == pageNum) {\r\n                    str += `<li class=\"page-item\"><a class=\"page-direction-link page-link active\" href=\"#\">${i}</a></li>`;\r\n                } else {\r\n                    str += `<li class=\"page-item\"><a class=\"page-direction-link page-link\" href=\"#\">${i}</a></li>`;\r\n                }\r\n            }\r\n\r\n            pagination.innerHTML = prev + str + next;\r\n\r\n        } else {\r\n            str = `<li class=\"page-item\"><a class=\"page-direction-link page-link active\" href=\"#\">1</a></li>`;\r\n            pagination.innerHTML = str;\r\n        }\r\n\r\n    }\r\n\r\n    // 切換頁面\r\n    function switchPages(e) {\r\n        e.preventDefault();\r\n        if (e.target.nodeName !== 'A') { return }\r\n\r\n        // 切換頁碼\r\n        if (e.target.textContent == 'Next') {\r\n            if (pageNum == pageLeng) {\r\n                pageNum = pageLeng;\r\n            } else {\r\n                pageNum++;\r\n            }\r\n        }\r\n        else if (e.target.textContent == 'Prev') {\r\n            if (pageNum == 1) {\r\n                pageNum = 1;\r\n            } else {\r\n                pageNum--;\r\n            }\r\n        }\r\n        else {\r\n            pageNum = parseInt(e.target.textContent);\r\n        }\r\n\r\n        // 更新資料\r\n        displayDistrict();\r\n    }\r\n\r\n    // 上一頁\r\n\r\n\r\n    // -------------------------------------------------------------\r\n    // 回到頂端\r\n    window.onscroll = () => { scrollFunction() }\r\n    // 偵測 scroll 的位置，超過 1000 顯示圖片\r\n    function scrollFunction() {\r\n        if (document.documentElement.scrollTop > 800) {\r\n            btnGoTop.style.display = \"block\";\r\n        } else {\r\n            btnGoTop.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    function goTop(e) {\r\n        e.preventDefault();\r\n        document.documentElement.scrollTop = 0;\r\n    }\r\n\r\n    // -------------------------------------------------------------\r\n    // 熱門行政區\r\n\r\n    // 點擊熱門行政區後，出現內容\r\n    function changeLink(e) {\r\n        e.preventDefault();\r\n        if (e.target.nodeName !== 'A') { return }\r\n\r\n        changeDistrict(e);\r\n        districtName.textContent = e.target.textContent;\r\n        kDistrictSelect.value = e.target.textContent;\r\n    }\r\n\r\n    // 隨機跑熱門行政區\r\n    function hotDistrict(result) {\r\n        let copyArr = [];\r\n        let randomArr = [];\r\n        let max = result.length;\r\n        let min = 0;\r\n        const randomLength = 4;\r\n\r\n        // 把每筆行政區 push 到 copyArr\r\n        for (var i in result) {\r\n            copyArr.push(result[i]);\r\n        }\r\n\r\n        // 隨機跑 4 筆資料\r\n        for (let i = 0; i < randomLength; i++) {\r\n            // 取得隨機數\r\n            let randomNum = getRandom(min, max);\r\n\r\n            // 根據隨機數把行政區 push 到 randomArr\r\n            randomArr.push(copyArr[randomNum]);\r\n\r\n            // 刪除隨機跑到的元素\r\n            copyArr.splice(randomNum, 1);\r\n\r\n            // 減少隨機產生的數字 27 -> 26 -> 25 ... (不減少會超出 index，產生 undefined)\r\n            max--;\r\n        }\r\n\r\n\r\n\r\n        // 顯示熱門行政區\r\n        let str = ``;\r\n        let color = ['#8a82cc', '#559AC8', '#F5D005', '#FFA782'];\r\n        for (let i = 0; i < randomArr.length; i++) {\r\n            str +=\r\n                `\r\n                <li class=\"hotDistrict-list-item\" style=\"border: 3px solid ${color[i]}\">\r\n                    <a href=\"#\" class=\"hotDistrict-list-link\" style=\"color: ${color[i]};\">${randomArr[i]}</a>\r\n                </li>\r\n            `;\r\n        }\r\n\r\n        hotDistrictList.innerHTML = str;\r\n    }\r\n\r\n    // 隨機跑數字\r\n    function getRandom(min, max) {\r\n        return Math.floor(Math.random() * (max - min));\r\n    }\r\n})();"]}